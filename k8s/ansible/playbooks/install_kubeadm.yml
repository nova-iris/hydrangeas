- name: Install kubeadm and Containerd
  hosts: all
  become: true
  tasks:

    - name: Update apt package index
      apt:
        update_cache: yes

    - name: Install required dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg
        state: present

    - name: Add Kubernetes GPG key
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes APT repository
      shell: |
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/deb/ /' > /etc/apt/sources.list.d/kubernetes.list
      args:
        creates: /etc/apt/sources.list.d/kubernetes.list

    - name: Update apt package index (after adding Kubernetes repo)
      apt:
        update_cache: yes

    - name: Install kubeadm, kubelet, kubectl
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Mark kubelet, kubeadm, kubectl to hold versions
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

    - name: Install containerd
      apt:
        name: containerd
        state: present

    - name: Create containerd configuration directory
      file:
        path: /etc/containerd
        state: directory
        mode: "0755"

    - name: Generate containerd default config and modify SystemdCgroup
      shell: |
        containerd config default | sed 's/SystemdCgroup = false/SystemdCgroup = true/' > /etc/containerd/config.toml
      args:
        creates: /etc/containerd/config.toml

    - name: Restart containerd service
      systemd:
        name: containerd
        state: restarted
        enabled: yes

    - name: Enable IP forwarding
      lineinfile:
        path: /etc/sysctl.conf
        line: "net.ipv4.ip_forward=1"
        create: yes
    
    - name: Apply sysctl changes
      command: sysctl -p

    - name: Load br_netfilter module
      modprobe:
        name: br_netfilter
        state: present

    - name: Ensure sysctl settings for Kubernetes networking
      copy:
        dest: "/etc/sysctl.d/k8s.conf"
        content: |
          net.bridge.bridge-nf-call-iptables=1
          net.bridge.bridge-nf-call-ip6tables=1
        mode: "0644"

    - name: Apply sysctl settings
      command: sysctl --system
      changed_when: false

 